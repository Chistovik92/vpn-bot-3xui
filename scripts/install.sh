#!/bin/bash

set -e

echo "üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN Bot –¥–ª—è 3x-ui..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_step() {
    echo -e "${CYAN}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
check_root() {
    if [[ $EUID -eq 0 ]]; then
        print_status "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root"
    else
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ root –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã"
        echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø–æ–º–æ—â—å—é: sudo $0"
        exit 1
    fi
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS_NAME=$ID
        OS_VERSION=$VERSION_ID
        print_status "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: $NAME $VERSION"
    elif [ -f /etc/redhat-release ]; then
        OS_NAME="rhel"
        OS_VERSION=$(cat /etc/redhat-release | sed 's/.*release \([0-9]\).*/\1/')
        print_status "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –û–°: Red Hat Enterprise Linux $OS_VERSION"
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux"
        exit 1
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
update_system() {
    print_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏..."
    
    case $OS_NAME in
        ubuntu|debian)
            print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è Ubuntu/Debian..."
            apt update && apt upgrade -y
            apt autoremove -y
            apt clean
            ;;
        centos|rhel|fedora)
            print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è CentOS/RHEL/Fedora..."
            if command -v dnf &>/dev/null; then
                dnf update -y
                dnf autoremove -y
                dnf clean all
            else
                yum update -y
                yum autoremove -y
                yum clean all
            fi
            ;;
        *)
            print_warning "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è $OS_NAME"
            print_warning "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É –≤—Ä—É—á–Ω—É—é"
            return 1
            ;;
    esac
    
    if [ $? -eq 0 ]; then
        print_status "–°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    else
        print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã"
        return 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
install_security_updates() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
    
    case $OS_NAME in
        ubuntu|debian)
            apt list --upgradable 2>/dev/null | grep -i security | cut -d'/' -f1 | xargs apt install -y
            ;;
        centos|rhel|fedora)
            if command -v dnf &>/dev/null; then
                dnf update --security -y
            else
                yum update --security -y
            fi
            ;;
    esac
    
    print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
update_system_components() {
    print_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."
    
    case $OS_NAME in
        ubuntu|debian)
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è–¥—Ä–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
            apt install -y linux-generic htop net-tools curl wget git build-essential
            ;;
        centos|rhel|fedora)
            if command -v dnf &>/dev/null; then
                dnf install -y kernel kernel-devel htop net-tools curl wget git gcc-c++
            else
                yum install -y kernel kernel-devel htop net-tools curl wget git gcc-c++
            fi
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
check_python() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Python..."
    
    if command -v python3 &>/dev/null; then
        PYTHON_CMD="python3"
        print_status "–ù–∞–π–¥–µ–Ω Python3"
    elif command -v python &>/dev/null; then
        PYTHON_CMD="python"
        print_status "–ù–∞–π–¥–µ–Ω Python"
    else
        print_warning "Python –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python..."
        
        case $OS_NAME in
            ubuntu|debian)
                apt install -y python3 python3-pip python3-venv
                PYTHON_CMD="python3"
                ;;
            centos|rhel|fedora)
                if command -v dnf &>/dev/null; then
                    dnf install -y python3 python3-pip
                else
                    yum install -y python3 python3-pip
                fi
                PYTHON_CMD="python3"
                ;;
            *)
                print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
                echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+ –≤—Ä—É—á–Ω—É—é:"
                echo "Ubuntu/Debian: sudo apt update && sudo apt install python3 python3-pip"
                echo "CentOS/RHEL: sudo yum install python3 python3-pip"
                exit 1
                ;;
        esac
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    PYTHON_VERSION=$($PYTHON_CMD --version 2>&1 | cut -d' ' -f2)
    print_status "–í–µ—Ä—Å–∏—è Python: $PYTHON_VERSION"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è >= 3.8
    MAJOR_VERSION=$(echo $PYTHON_VERSION | cut -d. -f1)
    MINOR_VERSION=$(echo $PYTHON_VERSION | cut -d. -f2)
    
    if [ $MAJOR_VERSION -lt 3 ] || ([ $MAJOR_VERSION -eq 3 ] && [ $MINOR_VERSION -lt 8 ]); then
        print_warning "–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $PYTHON_VERSION"
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ–ª–µ–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ Python..."
        
        case $OS_NAME in
            ubuntu|debian)
                if [[ "$OS_NAME" == "ubuntu" && "$OS_VERSION" == "18.04" ]]; then
                    apt install -y software-properties-common
                    add-apt-repository -y ppa:deadsnakes/ppa
                    apt update
                    apt install -y python3.8 python3.8-pip python3.8-venv
                    PYTHON_CMD="python3.8"
                else
                    apt install -y python3-pip python3-venv
                fi
                ;;
            centos|rhel|fedora)
                if command -v dnf &>/dev/null; then
                    dnf install -y python3-pip
                else
                    yum install -y python3-pip
                fi
                ;;
        esac
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ pip
check_pip() {
    print_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ pip..."
    
    if command -v pip3 &>/dev/null; then
        PIP_CMD="pip3"
        print_status "–ù–∞–π–¥–µ–Ω pip3"
    elif command -v pip &>/dev/null; then
        PIP_CMD="pip"
        print_status "–ù–∞–π–¥–µ–Ω pip"
    else
        print_warning "Pip –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pip..."
        
        case $OS_NAME in
            ubuntu|debian)
                apt install -y python3-pip
                PIP_CMD="pip3"
                ;;
            centos|rhel|fedora)
                if command -v dnf &>/dev/null; then
                    dnf install -y python3-pip
                else
                    yum install -y python3-pip
                fi
                PIP_CMD="pip3"
                ;;
        esac
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
    print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏..."
    $PIP_CMD install --upgrade pip
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Python..."
    
    $PIP_CMD install -r requirements.txt
    
    if [ $? -eq 0 ]; then
        print_status "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
        exit 1
    fi
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
init_database() {
    print_step "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    $PYTHON_CMD database/init_db.py
    
    if [ $? -eq 0 ]; then
        print_status "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
    else
        print_error "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
setup_config() {
    if [ ! -f ".env" ]; then
        print_step "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        cp .env.example .env
        print_warning "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞: nano .env"
    else
        print_status "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
optimize_system() {
    print_step "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è —Ñ–∞–π–ª–æ–≤ (–ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –±–æ—Ç–∞)
    if ! grep -q "bot_optimizations" /etc/security/limits.conf; then
        echo "# bot_optimizations" >> /etc/security/limits.conf
        echo "* soft nofile 65536" >> /etc/security/limits.conf
        echo "* hard nofile 65536" >> /etc/security/limits.conf
        print_status "–õ–∏–º–∏—Ç—ã —Ñ–∞–π–ª–æ–≤ —É–≤–µ–ª–∏—á–µ–Ω—ã"
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ swappiness –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if [ -f /proc/sys/vm/swappiness ]; then
        echo "vm.swappiness=10" >> /etc/sysctl.conf
        print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ swappiness –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
main() {
    echo "========================================"
    echo "   –£—Å—Ç–∞–Ω–æ–≤–∫–∞ VPN Bot –¥–ª—è 3x-ui"
    echo "========================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    check_root
    
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
    detect_os
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    update_system
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    install_security_updates
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    update_system_components
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    check_python
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
    check_pip
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_dependencies
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
    init_database
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    setup_config
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    optimize_system
    
    echo ""
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
    echo ""
    print_warning "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env: nano .env"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: $PYTHON_CMD start_bot.py"
    echo "3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker: docker-compose up -d"
    echo ""
    print_status "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: docs/SETUP.md"
    echo ""
    print_status "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∏—Å—Ç–µ–º—É: sudo reboot"
}

# –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main